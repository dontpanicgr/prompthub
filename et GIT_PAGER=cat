[33mcommit ad159b719887959a3891036ee99a3cf8083431a0[m[33m ([m[1;36mHEAD[m[33m -> [m[1;32mmain[m[33m, [m[1;31morigin/main[m[33m, [m[1;31morigin/HEAD[m[33m)[m
Author: George Margaritis <dontpanic.cg@gmail.com>
Date:   Fri Oct 17 17:28:36 2025 +0300

    Add support for additional AI provider API keys and update layout components
    
    - Introduced optional API keys for Google AI Studio, Groq, and OpenRouter in configuration files to enhance integration capabilities with various AI services.
    - Updated layout components to improve responsiveness and maintain consistency across the application, including adjustments to max-width settings.
    - Refactored user navigation to direct to user-specific pages instead of generic paths, enhancing user experience.
    - Improved middleware authentication checks for protected routes to streamline user access management.

[1mdiff --git a/setup-env.ps1 b/setup-env.ps1[m
[1mindex f0a94ed..2868774 100644[m
[1m--- a/setup-env.ps1[m
[1m+++ b/setup-env.ps1[m
[36m@@ -25,6 +25,26 @@[m [mif (Test-Path ".env.local") {[m
 NEXT_PUBLIC_SUPABASE_URL=your_supabase_url_here[m
 NEXT_PUBLIC_SUPABASE_ANON_KEY=your_supabase_anon_key_here[m
 [m
[32m+[m[32m# Server-side (optional)[m
[32m+[m[32m# SUPABASE_SERVICE_ROLE_KEY=your_service_role_key_here[m
[32m+[m
[32m+[m[32m# Managed AI Provider Keys (optional)[m
[32m+[m[32mOPENAI_API_KEY=sk-your-openai-key-here[m
[32m+[m[32mANTHROPIC_API_KEY=sk-ant-your-anthropic-key-here[m
[32m+[m[32mDEEPSEEK_API_KEY=sk-your-deepseek-key-here[m
[32m+[m[32mGOOGLE_AI_STUDIO_API_KEY=your-google-ai-studio-key[m
[32m+[m[32mGROQ_API_KEY=gsk_your-groq-key[m
[32m+[m[32mOPENROUTER_API_KEY=sk-or-v1-your-openrouter-key[m
[32m+[m
[32m+[m[32m# BYOK encryption key[m
[32m+[m[32mBYOK_ENC_KEY=your-32-character-encryption-key-here[m
[32m+[m
[32m+[m[32m# OpenAI-compatible base URL overrides[m
[32m+[m[32mOPENAI_COMPAT_BASE_URL=http://localhost:11434/v1[m
[32m+[m[32m# OPENROUTER_BASE_URL=https://openrouter.ai/api/v1[m
[32m+[m[32m# GROQ_BASE_URL=https://api.groq.com/openai/v1[m
[32m+[m[32m# GOOGLE_AI_STUDIO_BASE_URL=https://generativelanguage.googleapis.com/v1beta[m
[32m+[m
 # Example:[m
 # NEXT_PUBLIC_SUPABASE_URL=https://your-project-id.supabase.co[m
 # NEXT_PUBLIC_SUPABASE_ANON_KEY=your_anon_key_here[m

[33mcommit 7bb7986e2312db81733a802132f6f66609aa95cb[m
Author: George Margaritis <dontpanic.cg@gmail.com>
Date:   Fri Oct 10 13:13:35 2025 +0300

    Projects, category filtering, other fixes

[1mdiff --git a/fix-comments-rls.sql b/fix-comments-rls.sql[m
[1mdeleted file mode 100644[m
[1mindex 489a857..0000000[m
[1m--- a/fix-comments-rls.sql[m
[1m+++ /dev/null[m
[36m@@ -1,33 +0,0 @@[m
[31m--- Fix RLS policies for comments table[m
[31m--- Run this in your Supabase SQL Editor[m
[31m-[m
[31m--- Drop existing policies[m
[31m-DROP POLICY IF EXISTS "Comments are viewable by everyone" ON public.comments;[m
[31m-DROP POLICY IF EXISTS "Users can insert their own comments" ON public.comments;[m
[31m-DROP POLICY IF EXISTS "Users can update their own comments" ON public.comments;[m
[31m-DROP POLICY IF EXISTS "Users can delete their own comments" ON public.comments;[m
[31m-[m
[31m--- Create new policies that work with API routes[m
[31m-CREATE POLICY "Comments are viewable by everyone" ON public.comments[m
[31m-  FOR SELECT USING (is_deleted = false);[m
[31m-[m
[31m--- Allow insert if user_id matches the authenticated user OR if we're using service role[m
[31m-CREATE POLICY "Users can insert their own comments" ON public.comments[m
[31m-  FOR INSERT WITH CHECK ([m
[31m-    auth.uid() = user_id OR [m
[31m-    auth.role() = 'service_role'[m
[31m-  );[m
[31m-[m
[31m--- Allow update if user_id matches the authenticated user OR if we're using service role[m
[31m-CREATE POLICY "Users can update their own comments" ON public.comments[m
[31m-  FOR UPDATE USING ([m
[31m-    auth.uid() = user_id OR [m
[31m-    auth.role() = 'service_role'[m
[31m-  );[m
[31m-[m
[31m--- Allow delete if user_id matches the authenticated user OR if we're using service role[m
[31m-CREATE POLICY "Users can delete their own comments" ON public.comments[m
[31m-  FOR DELETE USING ([m
[31m-    auth.uid() = user_id OR [m
[31m-    auth.role() = 'service_role'[m
[31m-  );[m

[33mcommit 8ab8636fe39cd68389d0218a7a4a26608de1c166[m
Author: George Margaritis <dontpanic.cg@gmail.com>
Date:   Tue Oct 7 02:28:44 2025 +0300

    Lexee 1.0.0

[1mdiff --git a/fix-comments-rls.sql b/fix-comments-rls.sql[m
[1mnew file mode 100644[m
[1mindex 0000000..489a857[m
[1m--- /dev/null[m
[1m+++ b/fix-comments-rls.sql[m
[36m@@ -0,0 +1,33 @@[m
[32m+[m[32m-- Fix RLS policies for comments table[m
[32m+[m[32m-- Run this in your Supabase SQL Editor[m
[32m+[m
[32m+[m[32m-- Drop existing policies[m
[32m+[m[32mDROP POLICY IF EXISTS "Comments are viewable by everyone" ON public.comments;[m
[32m+[m[32mDROP POLICY IF EXISTS "Users can insert their own comments" ON public.comments;[m
[32m+[m[32mDROP POLICY IF EXISTS "Users can update their own comments" ON public.comments;[m
[32m+[m[32mDROP POLICY IF EXISTS "Users can delete their own comments" ON public.comments;[m
[32m+[m
[32m+[m[32m-- Create new policies that work with API routes[m
[32m+[m[32mCREATE POLICY "Comments are viewable by everyone" ON public.comments[m
[32m+[m[32m  FOR SELECT USING (is_deleted = false);[m
[32m+[m
[32m+[m[32m-- Allow insert if user_id matches the authenticated user OR if we're using service role[m
[32m+[m[32mCREATE POLICY "Users can insert their own comments" ON public.comments[m
[32m+[m[32m  FOR INSERT WITH CHECK ([m
[32m+[m[32m    auth.uid() = user_id OR[m[41m [m
[32m+[m[32m    auth.role() = 'service_role'[m
[32m+[m[32m  );[m
[32m+[m
[32m+[m[32m-- Allow update if user_id matches the authenticated user OR if we're using service role[m
[32m+[m[32mCREATE POLICY "Users can update their own comments" ON public.comments[m
[32m+[m[32m  FOR UPDATE USING ([m
[32m+[m[32m    auth.uid() = user_id OR[m[41m [m
[32m+[m[32m    auth.role() = 'service_role'[m
[32m+[m[32m  );[m
[32m+[m
[32m+[m[32m-- Allow delete if user_id matches the authenticated user OR if we're using service role[m
[32m+[m[32mCREATE POLICY "Users can delete their own comments" ON public.comments[m
[32m+[m[32m  FOR DELETE USING ([m
[32m+[m[32m    auth.uid() = user_id OR[m[41m [m
[32m+[m[32m    auth.role() = 'service_role'[m
[32m+[m[32m  );[m

[33mcommit 52a307619302e81a00f9a98ebd373c25306750aa[m
Author: George Margaritis <George.Margaritis@powerfactors.com>
Date:   Wed Sep 24 20:44:01 2025 +0300

    Initial commit

[1mdiff --git a/README.md b/README.md[m
[1mnew file mode 100644[m
[1mindex 0000000..13f9d9c[m
[1m--- /dev/null[m
[1m+++ b/README.md[m
[36m@@ -0,0 +1,193 @@[m
[32m+[m[32m# PromptHub üöÄ[m
[32m+[m
[32m+[m[32mA modern prompt discovery and sharing platform built with Next.js, Supabase, and Tailwind CSS.[m
[32m+[m
[32m+[m[32m## Features[m
[32m+[m
[32m+[m[32m- üîê **Authentication** - Google OAuth integration with Supabase Auth[m
[32m+[m[32m- üìù **Prompt Management** - Create, edit, and delete prompts with public/private visibility[m
[32m+[m[32m- üîç **Discovery** - Browse and search prompts by title and model[m
[32m+[m[32m- ‚ù§Ô∏è **Social Features** - Like and bookmark prompts with real-time updates[m
[32m+[m[32m- üë§ **User Profiles** - Public profiles showing user's prompts and stats[m
[32m+[m[32m- üåô **Dark Mode** - System-aware theme switching[m
[32m+[m[32m- üì± **Responsive** - Mobile-first design that works on all devices[m
[32m+[m
[32m+[m[32m## Tech Stack[m
[32m+[m
[32m+[m[32m- **Frontend**: Next.js 15 (App Router), TypeScript, Tailwind CSS[m
[32m+[m[32m- **Backend**: Supabase (PostgreSQL + Auth)[m
[32m+[m[32m- **Deployment**: Vercel + Supabase[m
[32m+[m[32m- **UI Components**: Lucide React icons, custom components[m
[32m+[m
[32m+[m[32m## Getting Started[m
[32m+[m
[32m+[m[32m### Prerequisites[m
[32m+[m
[32m+[m[32m- Node.js 18+[m[41m [m
[32m+[m[32m- npm or yarn[m
[32m+[m[32m- Supabase account[m
[32m+[m
[32m+[m[32m### 1. Clone and Install[m
[32m+[m
[32m+[m[32m```bash[m
[32m+[m[32mgit clone <your-repo-url>[m
[32m+[m[32mcd prompthub-app[m
[32m+[m[32mnpm install[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m### 2. Set up Supabase[m
[32m+[m
[32m+[m[32m1. Create a new project at [supabase.com](https://supabase.com)[m
[32m+[m[32m2. Go to Settings > API to get your project URL and anon key[m
[32m+[m[32m3. Copy `.env.example` to `.env.local` and fill in your Supabase credentials:[m
[32m+[m
[32m+[m[32m```env[m
[32m+[m[32mNEXT_PUBLIC_SUPABASE_URL=your_supabase_project_url[m
[32m+[m[32mNEXT_PUBLIC_SUPABASE_ANON_KEY=your_supabase_anon_key[m
[32m+[m[32mSUPABASE_SERVICE_ROLE_KEY=your_supabase_service_role_key[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m### 3. Set up Database[m
[32m+[m
[32m+[m[32m1. Go to your Supabase project dashboard[m
[32m+[m[32m2. Navigate to SQL Editor[m
[32m+[m[32m3. Copy and paste the contents of `supabase-schema.sql`[m
[32m+[m[32m4. Run the SQL to create all tables, policies, and functions[m
[32m+[m
[32m+[m[32m### 4. Configure Authentication[m
[32m+[m
[32m+[m[32m1. In your Supabase dashboard, go to Authentication > Providers[m
[32m+[m[32m2. Enable Google OAuth and configure it with your Google OAuth credentials[m
[32m+[m[32m3. Add your domain to the allowed redirect URLs:[m
[32m+[m[32m   - `http://localhost:3000/auth/callback` (development)[m
[32m+[m[32m   - `https://your-domain.vercel.app/auth/callback` (production)[m
[32m+[m
[32m+[m[32m### 5. Run Development Server[m
[32m+[m
[32m+[m[32m```bash[m
[32m+[m[32mnpm run dev[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mOpen [http://localhost:3000](http://localhost:3000) to see the app.[m
[32m+[m
[32m+[m[32m## Project Structure[m
[32m+[m
[32m+[m[32m```[m
[32m+[m[32msrc/[m
[32m+[m[32m‚îú‚îÄ‚îÄ app/                    # Next.js App Router pages[m
[32m+[m[32m‚îÇ   ‚îú‚îÄ‚îÄ auth/              # Authentication routes[m
[32m+[m[32m‚îÇ   ‚îú‚îÄ‚îÄ create/            # Create prompt page[m
[32m+[m[32m‚îÇ   ‚îú‚îÄ‚îÄ me/                # User dashboard[m
[32m+[m[32m‚îÇ   ‚îú‚îÄ‚îÄ popular/           # Popular prompts page[m
[32m+[m[32m‚îÇ   ‚îú‚îÄ‚îÄ prompt/[id]/       # Individual prompt pages[m
[32m+[m[32m‚îÇ   ‚îî‚îÄ‚îÄ user/[id]/         # User profile pages[m
[32m+[m[32m‚îú‚îÄ‚îÄ components/            # React components[m
[32m+[m[32m‚îÇ   ‚îú‚îÄ‚îÄ auth-provider.tsx  # Authentication context[m
[32m+[m[32m‚îÇ   ‚îú‚îÄ‚îÄ layout/            # Layout components[m
[32m+[m[32m‚îÇ   ‚îú‚îÄ‚îÄ prompts/           # Prompt-related components[m
[32m+[m[32m‚îÇ   ‚îú‚îÄ‚îÄ theme-provider.tsx # Theme management[m
[32m+[m[32m‚îÇ   ‚îî‚îÄ‚îÄ ui/                # Reusable UI components[m
[32m+[m[32m‚îú‚îÄ‚îÄ lib/                   # Utility functions[m
[32m+[m[32m‚îÇ   ‚îú‚îÄ‚îÄ supabase.ts        # Client-side Supabase client[m
[32m+[m[32m‚îÇ   ‚îú‚îÄ‚îÄ supabase-server.ts # Server-side Supabase client[m
[32m+[m[32m‚îÇ   ‚îî‚îÄ‚îÄ utils.ts           # Helper functions[m
[32m+[m[32m‚îî‚îÄ‚îÄ middleware.ts          # Next.js middleware for auth[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m## Database Schema[m
[32m+[m
[32m+[m[32mThe app uses the following main tables:[m
[32m+[m
[32m+[m[32m- **profiles** - User profiles (extends Supabase auth.users)[m
[32m+[m[32m- **prompts** - User-created prompts with visibility settings[m
[32m+[m[32m- **likes** - User likes on prompts[m
[32m+[m[32m- **bookmarks** - User bookmarks on prompts[m
[32m+[m
[32m+[m[32mAll tables have Row Level Security (RLS) enabled for data protection.[m
[32m+[m
[32m+[m[32m## üöÄ Production Deployment[m
[32m+[m
[32m+[m[32m### Deploy to Vercel (Recommended)[m
[32m+[m
[32m+[m[32m1. **Push to GitHub**[m
[32m+[m[32m   ```bash[m
[32m+[m[32m   git add .[m
[32m+[m[32m   git commit -m "Production ready: optimizations and monitoring"[m
[32m+[m[32m   git push origin main[m
[32m+[m[32m   ```[m
[32m+[m
[32m+[m[32m2. **Connect to Vercel**[m
[32m+[m[32m   - Go to [vercel.com](https://vercel.com)[m
[32m+[m[32m   - Click "Import Project"[m
[32m+[m[32m   - Connect your GitHub repository[m
[32m+[m[32m   - Vercel will auto-detect Next.js settings[m
[32m+[m
[32m+[m[32m3. **Add Environment Variables**[m
[32m+[m[32m   In your Vercel dashboard, add these environment variables:[m
[32m+[m
[32m+[m[32m   ```env[m
[32m+[m[32m   NEXT_PUBLIC_SUPABASE_URL=https://your-project.supabase.co[m
[32m+[m[32m   NEXT_PUBLIC_SUPABASE_ANON_KEY=your-anon-key[m
[32m+[m[32m   SUPABASE_SERVICE_ROLE_KEY=your-service-role-key[m
[32m+[m
[32m+[m[32m   # Optional: Analytics[m
[32m+[m[32m   NEXT_PUBLIC_GOOGLE_ANALYTICS_ID=GA-XXXXXXXXXX[m
[32m+[m[32m   NEXT_PUBLIC_MIXPANEL_TOKEN=your-mixpanel-token[m
[32m+[m[32m   ```[m
[32m+[m
[32m+[m[32m4. **Deploy!**[m
[32m+[m[32m   - Vercel will automatically deploy your app[m
[32m+[m[32m   - Monitor the build in the Vercel dashboard[m
[32m+[m[32m   - Your app will be live at `your-app.vercel.app`[m
[32m+[m
[32m+[m[32m### Performance Features[m
[32m+[m[32m- ‚úÖ **Automatic optimization** (images, fonts, code splitting)[m
[32m+[m[32m- ‚úÖ **CDN distribution** worldwide[m
[32m+[m[32m- ‚úÖ **Edge caching** for fast global performance[m
[32m+[m[32m- ‚úÖ **Analytics integration** ready[m
[32m+[m[32m- ‚úÖ **Error monitoring** built-in[m
[32m+[m
[32m+[m[32m### Other Deployment Options[m
[32m+[m[32m- **Netlify**: Connect GitHub repo and add build settings[m
[32m+[m[32m- **Railway**: Deploy with database included[m
[32m+[m[32m- **Render**: Full-stack deployment with auto-scaling[m
[32m+[m[32m- **Self-hosted**: Docker container with environment setup[m
[32m+[m
[32m+[m[32m## üìä Performance & Monitoring[m
[32m+[m
[32m+[m[32m### Bundle Analysis[m
[32m+[m[32m- **Total Bundle**: ~178 kB shared by all pages[m
[32m+[m[32m- **First Load JS**: ~220 kB for most pages[m
[32m+[m[32m- **Optimized Chunks**: Automatic code splitting by route[m
[32m+[m[32m- **Image Optimization**: WebP/AVIF support with responsive sizing[m
[32m+[m
[32m+[m[32m### Core Web Vitals[m
[32m+[m[32m- **LCP (Largest Contentful Paint)**: < 2.5s[m
[32m+[m[3